function loginService(e,n,r,t,u){function o(e){return e.data?e.data:e}var i={};return i.login=function(u,i){return n(function(n,c){e.post("/login",{username:u,password:i}).then(o).then(function(e){if(e.success){var u=new t;angular.extend(u,e.user),r.currentUser=u,n(!0)}else n(!1)})})},i.logoutUser=function(){return n(function(n,t){e.post("/logout",{logout:!0}).then(function(){r.currentUser=void 0,n()})})},i.authorizeCurrentUserForRoute=function(e){return r.isAuthorized(e)?!0:n.reject(u)},i.authorizeAuthenicatedUserForRoute=function(){return r.isAuthed()?!0:n.reject(u)},i.createNewUser=function(e){var u=new t(e);return n(function(e,n){u.$save().then(function(){r.currentUser=u,e()},function(e){n(e.data.reason)})})},i.updateProfile=function(e){var t=angular.copy(r.currentUser);return angular.extend(t,e),console.log(t),n(function(e,n){t.$update().then(function(){r.currentUser=t,e()},function(e){n(e.data.reason)})})},i}loginService.$inject=["$http","$q","IdentityFactory","UserResource","NOT_AUTHORIZED"],angular.module("app.models.user-models").service("loginService",loginService);